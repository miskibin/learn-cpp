"use strict";(self.webpackChunkcpp_learn=self.webpackChunkcpp_learn||[]).push([[979],{4422:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>s,metadata:()=>i,toc:()=>d});var a=t(4848),r=t(8453);const s={},o="Lambdas",i={id:"lambdas",title:"Lambdas",description:"Just like in python, you can define lambdas in C++.",source:"@site/docs/15-lambdas.md",sourceDirName:".",slug:"/lambdas",permalink:"/learn-cpp/docs/lambdas",draft:!1,unlisted:!1,editUrl:"https://github.com/michalskibinski109/learn-cpp/tree/main/docs/15-lambdas.md",tags:[],version:"current",sidebarPosition:15,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"STL functions",permalink:"/learn-cpp/docs/stl-operations"}},c={},d=[];function u(n){const e={code:"code",h1:"h1",p:"p",pre:"pre",...(0,r.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h1,{id:"lambdas",children:"Lambdas"}),"\n",(0,a.jsx)(e.p,{children:"Just like in python, you can define lambdas in C++."}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-cpp",children:"\nauto add = [](int x, int y) -> int {\n    return x + y;\n};\n\nLOG(add(5, 3)); // Outputs: 8\n\nauto f = [=](int x) -> int {\n    return x + 5; // error. X was captured by value\n};\nauto f = [=](int x) mutable -> int{\n    return x + 5; // It won't change the value of x but it will work.\n};\nauto f = [&](int x) -> int {\n    return x + 5; // ok. X was captured by reference\n};\n\n"})})]})}function l(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(u,{...n})}):u(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>o,x:()=>i});var a=t(6540);const r={},s=a.createContext(r);function o(n){const e=a.useContext(s);return a.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:o(n.components),a.createElement(s.Provider,{value:e},n.children)}}}]);