"use strict";(self.webpackChunkcpp_learn=self.webpackChunkcpp_learn||[]).push([[494],{9090:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var a=t(4848),r=t(8453),s=t(1470),o=t(9365);const i={},l="\ud83d\udd12 Const Keyword",c={id:"const",title:"\ud83d\udd12 Const Keyword",description:"\ud83d\udd22 Variables",source:"@site/docs/14-const.mdx",sourceDirName:".",slug:"/const",permalink:"/learn-cpp/docs/const",draft:!1,unlisted:!1,editUrl:"https://github.com/michalskibinski109/learn-cpp/tree/main/docs/14-const.mdx",tags:[],version:"current",sidebarPosition:14,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udd04 Ternary Operators",permalink:"/learn-cpp/docs/ternary_operators"},next:{title:"\ud83d\uddc2\ufe0f Enums",permalink:"/learn-cpp/docs/enums"}},u={},d=[{value:"\ud83d\udd22 Variables",id:"-variables",level:2},{value:"\ud83c\udff7\ufe0f Classes and Declarations",id:"\ufe0f-classes-and-declarations",level:2},{value:"\ud83d\udd0d Wild Example",id:"-wild-example",level:3},{value:"\ud83d\udd04 Mutable Keyword",id:"-mutable-keyword",level:3},{value:"constexpr Keyword",id:"constexpr-keyword",level:3}];function h(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"-const-keyword",children:"\ud83d\udd12 Const Keyword"}),"\n",(0,a.jsx)(n.h2,{id:"-variables",children:"\ud83d\udd22 Variables"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"const"})," keyword is used to declare a constant variable. A constant variable is a variable whose value cannot be changed after it has been assigned. The syntax for declaring a constant variable is as follows:"]}),"\n",(0,a.jsxs)(s.A,{defaultValue:"basic",values:[{label:"Basic Usage",value:"basic"},{label:"Pointer Example",value:"pointer"}],children:[(0,a.jsx)(o.A,{value:"basic",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cpp",children:"const int x = 5;\n"})})}),(0,a.jsx)(o.A,{value:"pointer",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cpp",children:'int main()\n{\n    const int AGE = 20;\n    int* a = new int;\n    *a = 10;\n    a = &AGE; // Error: a value of type "const int *" cannot be assigned to an entity of type "int *"\n    // bypassing it\n    a = (int*)&AGE; // just reassigning the pointer to the address of AGE\n}\n'})})})]}),"\n",(0,a.jsx)(n.admonition,{type:"caution",children:(0,a.jsxs)(n.p,{children:["Keep in mind that if you create ",(0,a.jsx)(n.code,{children:"const *int pointer"})," you can't change the value of the pointer, but you can change the value of the variable it points to."]})}),"\n",(0,a.jsx)(n.admonition,{title:"\ud83d\udccb Order of const",type:"note",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cpp",children:"const int* x = 5; // x is a pointer to a constant integer\nint const* x = 5; // same as above\nint* const x = 5; // x is a constant pointer to an integer (you can't change the address of x)\nconst int* const x = 5; // x is a constant pointer to a constant integer\n"})})}),"\n",(0,a.jsx)(n.h2,{id:"\ufe0f-classes-and-declarations",children:"\ud83c\udff7\ufe0f Classes and Declarations"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"const"})," keyword can also be used to declare that a function does not modify the object it is called on. This is known as a ",(0,a.jsx)(n.code,{children:"const"})," member function. The syntax for declaring a ",(0,a.jsx)(n.code,{children:"const"})," member function is as follows:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cpp",children:"class MyClass {\npublic:\n    void foo() const {\n        // Function body\n    }\n};\n"})}),"\n",(0,a.jsx)(n.admonition,{title:"\ud83d\udca1 Why should you use const in member functions?",type:"tip",children:(0,a.jsx)(n.p,{children:"It allows the compiler to catch errors where the function modifies the object it is called on. It also allows the compiler to optimize the code by caching the result of the function call."})}),"\n",(0,a.jsx)(n.h3,{id:"-wild-example",children:"\ud83d\udd0d Wild Example"}),"\n",(0,a.jsxs)(s.A,{defaultValue:"code",values:[{label:"Code",value:"code"},{label:"Explanation",value:"explanation"}],children:[(0,a.jsx)(o.A,{value:"code",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cpp",children:"class MyClass {\n    const int* const foo() const {\n        return 5;\n    }\n};\n"})})}),(0,a.jsx)(o.A,{value:"explanation",children:(0,a.jsxs)(n.p,{children:["What does this code do? It returns a constant pointer to a constant integer. The function ",(0,a.jsx)(n.code,{children:"foo"})," is a ",(0,a.jsx)(n.code,{children:"const"})," member function, which means it does not modify the object it is called on. The return type of the function is a constant pointer to a constant integer, which means that the pointer and the integer it points to cannot be modified."]})})]}),"\n",(0,a.jsx)(n.h3,{id:"-mutable-keyword",children:"\ud83d\udd04 Mutable Keyword"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"mutable"})," keyword can be used to declare that a member variable can be modified in a ",(0,a.jsx)(n.code,{children:"const"})," member function. This is useful when you have a member variable that needs to be modified in a ",(0,a.jsx)(n.code,{children:"const"})," member function, e.g., for debugging purposes."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cpp",children:"class MyClass {\nprivate:\n    mutable int x;\npublic:\n    void foo() const {\n        x = 5; // This is allowed because x is mutable\n    }\n};\n"})}),"\n",(0,a.jsx)(n.h3,{id:"constexpr-keyword",children:"constexpr Keyword"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"constexpr"})," keyword is used to declare that a function or variable is evaluated at compile time. This can be useful for performance optimization, as it allows the compiler to evaluate the function or variable at compile time rather than at runtime."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cpp",children:"constexpr int square(int x) {\n    return x * x;\n}\n\nint main() {\n    int x = square(5); // x is assigned the value 25 at compile time\n}\n"})}),"\n",(0,a.jsx)(n.admonition,{title:"\u26a0\ufe0f Why it does not work with strings",type:"warning",children:(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"constexpr"})," functions can only contain a single return statement, and they cannot contain any statements that are not evaluated at compile time. This means that ",(0,a.jsx)(n.code,{children:"constexpr"})," functions cannot contain loops, conditionals, or any other statements that are evaluated at runtime."]})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},9365:(e,n,t)=>{t.d(n,{A:()=>o});t(6540);var a=t(4164);const r={tabItem:"tabItem_Ymn6"};var s=t(4848);function o(e){let{children:n,hidden:t,className:o}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,a.A)(r.tabItem,o),hidden:t,children:n})}},1470:(e,n,t)=>{t.d(n,{A:()=>w});var a=t(6540),r=t(4164),s=t(3104),o=t(6347),i=t(205),l=t(7485),c=t(1682),u=t(679);function d(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:r}}=e;return{value:n,label:t,attributes:a,default:r}}))}(t);return function(e){const n=(0,c.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const r=(0,o.W6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(s),(0,a.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(r.location.search);n.set(s,e),r.replace({...r.location,search:n.toString()})}),[s,r])]}function b(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,s=h(e),[o,l]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:s}))),[c,d]=m({queryString:t,groupId:r}),[b,f]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,s]=(0,u.Dv)(t);return[r,(0,a.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:r}),x=(()=>{const e=c??b;return p({value:e,tabValues:s})?e:null})();(0,i.A)((()=>{x&&l(x)}),[x]);return{selectedValue:o,selectValue:(0,a.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),f(e)}),[d,f,s]),tabValues:s}}var f=t(2303);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=t(4848);function g(e){let{className:n,block:t,selectedValue:a,selectValue:o,tabValues:i}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),u=e=>{const n=e.currentTarget,t=l.indexOf(n),r=i[t].value;r!==a&&(c(n),o(r))},d=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},n),children:i.map((e=>{let{value:n,label:t,attributes:s}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>l.push(e),onKeyDown:d,onClick:u,...s,className:(0,r.A)("tabs__item",x.tabItem,s?.className,{"tabs__item--active":a===n}),children:t??n},n)}))})}function y(e){let{lazy:n,children:t,selectedValue:r}=e;const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function j(e){const n=b(e);return(0,v.jsxs)("div",{className:(0,r.A)("tabs-container",x.tabList),children:[(0,v.jsx)(g,{...n,...e}),(0,v.jsx)(y,{...n,...e})]})}function w(e){const n=(0,f.A)();return(0,v.jsx)(j,{...e,children:d(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var a=t(6540);const r={},s=a.createContext(r);function o(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);